
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    # > linux 2.6 usr epoll
    use epoll;

    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    client_max_body_size 20m;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream design.com {
        server  192.168.11.105:80;
        server  192.168.42.167:80;
        server  192.168.42.178:80;
        server  192.168.42.39:80;
    }

    server {
        listen       80;
        server_name  localhost;
        autoindex on;
	    autoindex_exact_size off;
	    autoindex_localtime on;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            #proxy
            #proxy_pass http://design.com;
            root   html;
            #index  index.html index.htm;
            index cloud_file.html;

            #index index.html;
        }

        location /upload.html {
            root html;
            index upload.html;
        }

        location /demo {
            fastcgi_pass 127.0.0.1:8011;
            fastcgi_index demo.cgi;
            include fastcgi.conf;
        }

        location /echo {
            fastcgi_pass 127.0.0.1:8012;
            fastcgi_index echo.cgi;
            include fastcgi.conf;
        }

        location /login.html {
            root   html;
            index  login.html ;
        }

        location = /reg {
            fastcgi_pass 127.0.0.1:8081;
            fastcgi_index reg.cgi;
            include fastcgi.conf;
        }

        location /upload/UploadAction {
            fastcgi_pass 127.0.0.1:8082;
            fastcgi_index upload.cgi;
            include fastcgi.conf;
        }

        location = /login {
            fastcgi_pass 127.0.0.1:8084;
            fastcgi_index login.cgi;
            include fastcgi.conf;
        }

        location = /data {
            fastcgi_pass 127.0.0.1:8085;
            fastcgi_index data.cgi;
            include fastcgi.conf;
        }

        #static files
        location ~ .*\.(gif|jpg|jpeg|png|bmp|css|js|swp)$ {
            root html;
            expires 30d;
        }

        #location ~* \.cgi$ {
        #    root html;
        #    fastcgi_index login.cgi;
        #    include fastcgi.conf;
        #    fastcgi_pass 127.0.0.1:8082;
        #}


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    #server for http mytest
    #server {
    #    listen 8777;

    #     server_name localhost;

    #     location / {
    #        mytest;
    #    }
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
